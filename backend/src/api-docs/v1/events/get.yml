tags:
  - events
summary: searches events
operationId: searchEvents
security:
  - ApiKeyAuth: []
description: |
  By passing in the appropriate options, you can search for
  available events in the system
parameters:
  - in: query
    name: page
    description: Page number
    schema:
      type: integer
      format: int32
      default: 1

  - in: query
    name: per_page
    description: Maximum number of records to return
    schema:
      type: integer
      format: int32
      default: 25

  - in: query
    name: order
    description: Order of events timestamp
    schema:
      type: string
      enum: [asc, desc]
      default: 'desc'


  - in: query
    name: filter[event_type]
    schema:
      type: string
      format: enum

  - in: query
    name: filter[care_recipient_id]
    schema:
      type: string
      format: uuid

  - in: query
    name: filter[alert_id]
    schema:
      type: string
      format: uuid

  - in: query
    name: filter[task_instance_id]
    schema:
      type: string

  - in: query
    name: filter[visit_id]
    schema:
      type: string
      format: uuid

  - in: query
    name: filter[caregiver_id]
    schema:
      type: string
      format: uuid

  - in: query
    name: filter[rejected_event_id]
    schema:
      type: string
      format: uuid

  - in: query
    name: filter[observation_event_id]
    schema:
      type: string
      format: uuid

responses:
  '200':
    description: search results matching criteria
    content:
      application/json:
        schema:
          type: object
          properties:
            data:
              type: array
              items:
                $ref: '#/components/schemas/Event'
            max_pages:
              type: number
              description: Number of pages
            row_count:
              type: number
              description: Number of rows in database that match
            page:
              type: number
              description: Current page
  '401':
    description: Unauthorized
    content:
      application/json:
        schema:
          properties:
            message:
              type: string
              example: You must authenticate to access birdie api.  
  '500':
    description: Error
    content:
      application/json:
        schema:
          properties: 
            message:
              type: string
              description: Error message
              example: An error message
            errors:
              type: object
              description: Some errors
